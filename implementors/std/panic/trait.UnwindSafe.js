(function() {var implementors = {};
implementors["agilulf"] = [{text:"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf/struct.Server.html\" title=\"struct agilulf::Server\">Server</a>",synthetic:true,types:["agilulf::server::tcp_server::Server"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf/struct.MemDatabase.html\" title=\"struct agilulf::MemDatabase\">MemDatabase</a>",synthetic:true,types:["agilulf::storage::mem_database::MemDatabase"]},{text:"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf/struct.Database.html\" title=\"struct agilulf::Database\">Database</a>",synthetic:true,types:["agilulf::storage::database::Database"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf/struct.DatabaseBuilder.html\" title=\"struct agilulf::DatabaseBuilder\">DatabaseBuilder</a>",synthetic:true,types:["agilulf::storage::database::DatabaseBuilder"]},];
implementors["agilulf_driver"] = [{text:"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_driver/struct.AgilulfClient.html\" title=\"struct agilulf_driver::AgilulfClient\">AgilulfClient</a>",synthetic:true,types:["agilulf_driver::client::AgilulfClient"]},{text:"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_driver/struct.MultiAgilulfClient.html\" title=\"struct agilulf_driver::MultiAgilulfClient\">MultiAgilulfClient</a>",synthetic:true,types:["agilulf_driver::client::MultiAgilulfClient"]},];
implementors["agilulf_fs"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_fs/struct.File.html\" title=\"struct agilulf_fs::File\">File</a>",synthetic:true,types:["agilulf_fs::File"]},{text:"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_fs/struct.WriteFile.html\" title=\"struct agilulf_fs::WriteFile\">WriteFile</a>&lt;'a&gt;",synthetic:true,types:["agilulf_fs::WriteFile"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_fs/enum.FSError.html\" title=\"enum agilulf_fs::FSError\">FSError</a>",synthetic:true,types:["agilulf_fs::error::FSError"]},];
implementors["agilulf_protocol"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/struct.Slice.html\" title=\"struct agilulf_protocol::Slice\">Slice</a>",synthetic:true,types:["agilulf_protocol::slice::Slice"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/struct.AsyncReadBuffer.html\" title=\"struct agilulf_protocol::AsyncReadBuffer\">AsyncReadBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>",synthetic:true,types:["agilulf_protocol::async_buffer::AsyncReadBuffer"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/struct.AsyncWriteBuffer.html\" title=\"struct agilulf_protocol::AsyncWriteBuffer\">AsyncWriteBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>",synthetic:true,types:["agilulf_protocol::async_buffer::AsyncWriteBuffer"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_protocol/enum.DatabaseError.html\" title=\"enum agilulf_protocol::DatabaseError\">DatabaseError</a>",synthetic:true,types:["agilulf_protocol::error::database_error::DatabaseError"]},{text:"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_protocol/enum.ProtocolError.html\" title=\"enum agilulf_protocol::ProtocolError\">ProtocolError</a>",synthetic:true,types:["agilulf_protocol::error::protocol_error::ProtocolError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_protocol/reply/enum.Status.html\" title=\"enum agilulf_protocol::reply::Status\">Status</a>",synthetic:true,types:["agilulf_protocol::reply::Status"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_protocol/reply/enum.Reply.html\" title=\"enum agilulf_protocol::reply::Reply\">Reply</a>",synthetic:true,types:["agilulf_protocol::reply::Reply"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/request/struct.PutCommand.html\" title=\"struct agilulf_protocol::request::PutCommand\">PutCommand</a>",synthetic:true,types:["agilulf_protocol::request::PutCommand"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/request/struct.GetCommand.html\" title=\"struct agilulf_protocol::request::GetCommand\">GetCommand</a>",synthetic:true,types:["agilulf_protocol::request::GetCommand"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/request/struct.ScanCommand.html\" title=\"struct agilulf_protocol::request::ScanCommand\">ScanCommand</a>",synthetic:true,types:["agilulf_protocol::request::ScanCommand"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_protocol/request/struct.DeleteCommand.html\" title=\"struct agilulf_protocol::request::DeleteCommand\">DeleteCommand</a>",synthetic:true,types:["agilulf_protocol::request::DeleteCommand"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"agilulf_protocol/request/enum.Command.html\" title=\"enum agilulf_protocol::request::Command\">Command</a>",synthetic:true,types:["agilulf_protocol::request::Command"]},];
implementors["agilulf_skiplist"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"agilulf_skiplist/struct.SkipMap.html\" title=\"struct agilulf_skiplist::SkipMap\">SkipMap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>",synthetic:true,types:["agilulf_skiplist::skipmap::SkipMap"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
